<?php

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2013-08-07 at 02:34:00.
 */
class Fmo_LoggerTest extends PHPUnit_Framework_TestCase {

    /**
     * @covers Fmo_Logger::info
     * @todo   Implement testInfo().
     */
    public function testInfo()
    {
        try {
            Fmo_Logger::info('Prueba INFO');
            $this->assertTrue(true);
        } catch (Exception $ex) {
            $this->assertTrue(false, $ex->getMessage());
        }
    }

    /**
     * @covers Fmo_Logger::error
     * @todo   Implement testError().
     */
    public function testError()
    {
        try {
            Fmo_Logger::error('Prueba ERROR');
            $this->assertTrue(true);
        } catch (Exception $ex) {
            $this->assertTrue(false, $ex->getMessage());
        }
    }

    /**
     * @covers Fmo_Logger::alert
     * @todo   Implement testAlert().
     */
    public function testAlert()
    {
        try {
            Fmo_Logger::alert('Prueba ALERT');
            $this->assertTrue(true);
        } catch (Exception $ex) {
            $this->assertTrue(false, $ex->getMessage());
        }
    }

    /**
     * @covers Fmo_Logger::critic
     * @todo   Implement testCritic().
     */
    public function testCritic() {
        try {
            Fmo_Logger::critic('Prueba CRITIC');
            $this->assertTrue(true);
        } catch (Exception $ex) {
            $this->assertTrue(false, $ex->getMessage());
        }
    }

    /**
     * @covers Fmo_Logger::debug
     * @todo   Implement testDebug().
     */
    public function testDebug() {
        try {
            Fmo_Logger::debug('Prueba DEBUG');
            $this->assertTrue(true);
        } catch (Exception $ex) {
            $this->assertTrue(false, $ex->getMessage());
        }
    }

    /**
     * @covers Fmo_Logger::emergency
     * @todo   Implement testEmergency().
     */
    public function testEmergency() {
        try {
            Fmo_Logger::emergency('Prueba EMERGENCY');
            $this->assertTrue(true);
        } catch (Exception $ex) {
            $this->assertTrue(false, $ex->getMessage());
        }
    }

    /**
     * @covers Fmo_Logger::notice
     * @todo   Implement testNotice().
     */
    public function testNotice() {
        try {
            Fmo_Logger::notice('Prueba NOTICE');
            $this->assertTrue(true);
        } catch (Exception $ex) {
            $this->assertTrue(false, $ex->getMessage());
        }
    }

    /**
     * @covers Fmo_Logger::warning
     * @todo   Implement testWarning().
     */
    public function testWarning() {
        try {
            Fmo_Logger::warning('Prueba WARNING');
            $this->assertTrue(true);
        } catch (Exception $ex) {
            $this->assertTrue(false, $ex->getMessage());
        }
    }

}
